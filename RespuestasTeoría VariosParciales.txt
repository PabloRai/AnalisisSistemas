Teoría hoja 23:

1)
	Según la imágen dada, existen dos burbujas (A y B) las cuales no aportan
	nada al sistema, dado que son dos burbujas aisladas que no poseen entradas ni
	salidas ya que sin importar el nivel del DFD cada burbúja debe poseer al menos 
	dos entrada y una salida.

2)
	Dado que las burbujas primitvas no almacenan datos, sólo procesan, para que 
	una burbúja primitiva tenga una salida distinta a su entrada mínimo debe recibir
	dos entradas.

3)
	No necesariamente todas las clases conceptuales deben ser objetos tangibles, en sistemas de ventas, 
	no puede faltar la transacción principal "Venta" que representaría una clase conceptual la cual claramente no
	es tangible.

4) ESTO ES MEDIO HUMO:
	No, de existir esta clase no aportaría nada al sistema, ya que mínimo debe tener 2 atributos:
	Su id para identificarse y otro atributo que sería el que aportaría al sistema.
	Por ejemplo: Tipo de combustible, posee 2 atributos, su id para identificarse y una descripción que
	indica el tipo de combustible: "Nafta", "Gas", "Diesel"

5)
	Relevar es anotar todo lo que dice el cliente, es un proceso estático.
	Elicitar: Es un proceso activo que se compone de dos partes bien definidas:
		Extracción: Se obtienen datos e información mediante la lectura de documentos, formularios, etc.
		Educción: Se obtienen datos de fuentes humanas:
			· Stakeholders
			· Personas indiretas
			· Personjas del dominio
			· Interactuadores (Envian un delegado o al jefe) 
		La educción se realiza mediante distintas técnicas:
			· Entrevistas (Abiertas o cerradas)
			· Encuestas (Pueden contener preguntas cerradas de Si/No y algunas abiertas)
			· Observación (Técnica pasiva)

6)
	El encargado de subsanarlo es el analista responsable
	ESTO ES MUY CORTO PERO DIGAMOS QUE LA PREGUNTA NO AYUDA MUCHO.

7) 
	En las metodologías ágiles se prioriza la rapidez con la cual el sistema avanza, y se utiliza un contrato por cada
	nueva función o implementación del sistema, por eso es que el cliente está muy apegado al proyecto
	(En una época el cliente estaba directamente con el grupo de desarrollo)


Teoría foto 1:

	1)
		Las entidades del DER (Diagrama de entidad-relación) hacen referencia a las clases del modelo de dominio
		ALGUNA IDEA DE SI LAS RELACIONES HACEN LO MISMO??

		Adri:
			Ambas describen características mediante atributos
			Ambas establecen relaciones, luego esas relaciones tienen atributos
		

	2) 
		Si se omite un requisito funcional en la especificación de requisitos, el sistema no va a cumplir con 
		las espectativas del cliente $$$, y dependiendo del ciclo de vida elegido y la etapa en la cual se detecte
		la falta de éste requisito el costo puede ser muy alto.

	3)
		La relación de composición es una relación de alto acoplamiento entre dos clases, indica que una clase 
		no puede vivir (no tiene razón de ser) sin la otra, un claro ejemplo es el acoplamiento entre
		una línea de venta y una venta, la clase "Línea de venta" no tiene razón de existir si no existe una venta.
		LO DE TIEMPO DE VIDA NO TENGO LA MÁS PUTA IDEA =)

	4) 
		La agregación genera bajo acoplamiento entre clases ya que ambas clases pueden existir (tienen razón
		de ser) si la otra clase fuera removida del modelo de dominio del problema.
		Ejemplo: Una computadora y sus partes
			La computadora contiene un monitor, teclado, mouse y CPU que por separado pueden existir si la clase
			computadora fuese eliminada.
		PUSE ESTE EJEMPLO PERO NI IDEA SI ESTÁ BIEN, ES UN DETALLE (SUPONGO) //2

	5) 
		ESTO LO VIMOS RE POR ARRIBA PERO BUENO YO LE MANDO MECHA
		La programación en pareja en XP consiste en que uno de los programadores programa mientras el otro
		mira lo que su compañero está haciendo, de esta manera si se detecta un error o una mejora, el compañero
		puede avisarle a la persona que está programando actualmente para corregirlo, a su vez se fomenta la
		discusión sobre cómo realizar una determinada tarea y se logran resultados mejores en un tiempo menor.





